#!/bin/sh
# Because I don't hate myself enough.  Licensed under BSD 2 Clause
# License.

# Numbers are represented as xxxx.yyyyyy.  If you have more than one
# dot in the string, you're fucked.  If you don't have a dot in the
# string, you're fucked.

# Make string of N K characters.
__mkstr(){
	n=0
	str=
	while [ $n -lt $1 ]; do
		str="$str$2"
		: $((n+=1))
	done
	echo "$str"
	unset n str
}

# Return N question marks.
__nqnmarks(){
	__mkstr $1 '?'
}

# Return 10eN.
__tenpower(){
	case $1 in
	0) echo 1 ;;
	1) echo 10 ;;
	2) echo 100 ;;
	3) echo 1000 ;;
	4) echo 10000 ;;
	5) echo 100000 ;;
	6) echo 1000000 ;;
	7) echo 10000000 ;;
	8) echo 100000000 ;;
	9) echo 1000000000 ;;
	10) echo 10000000000 ;;
	11) echo 100000000000 ;;
	12) echo 1000000000000 ;;
	13) echo 10000000000000 ;;
	14) echo 100000000000000 ;;
	15) echo 1000000000000000 ;;
	*) echo "1000000000000000$(__mkstr $(($1 - 15)) 0)" ;;
	esac
}


# Subtract $2 from $1.
sub(){
	float1="${1#*.}"
	dec1="${1%%.$float1}"
	float2="${2#*.}"
	dec2="${2%%.$float2}"
	nfloat1=${#float1}
	nfloat2=${#float2}

	maxf=$((nfloat1 >= nfloat2 ? nfloat1 : nfloat2))

	n1="$dec1$float1"
	n2="$dec2$float2"

	n1=$(((n1 < 0 ? -1 : 1) * ${n1#${n1%%[!0-]*}} * $(__tenpower $((maxf - nfloat1)))))
	n2=$(((n2 < 0 ? -1 : 1) * ${n2#${n2%%[!0-]*}} * $(__tenpower $((maxf - nfloat2)))))

	new=$((n1 - n2))

	anew=${new#-}

	newf=${anew#$(__nqnmarks $((${#anew} - maxf)))}

	ndec=${new%%$newf}

	[ ${ndec:=0} = - ] && ndec=-0
	echo ${ndec:-0}.$newf

	unset float1 dec1 float2 dec2 nfloat1 nfloat2 maxf n1 n2 new anew newf ndec
}

# Add $1 and $2.
add(){
	n=${2#-}; [ $n = $2 ] && n=-$2
	sub $1 $n
	unset n
}

# Multiply $1 and $2.
mult(){
	float1="${1#*.}"
	dec1="${1%%.$float1}"
	float2="${2#*.}"
	dec2="${2%%.$float2}"
	nfloat1=${#float1}
	nfloat2=${#float2}

	maxf=$((nfloat1 >= nfloat2 ? nfloat1 : nfloat2))

	n1="$dec1$float1"
	n2="$dec2$float2"

	n1=$((n1 < 0 ? -1 : 1 * ${n1#${n1%%[!0-]*}} * $(__tenpower $((maxf - nfloat1)))))
	n2=$((n2 < 0 ? -1 : 1 * ${n2#${n2%%[!0-]*}} * $(__tenpower $((maxf - nfloat2)))))

	new=$((n1 * n2))

	anew=${new#-}

	newf=${anew#$(__nqnmarks $((${#anew} - maxf)))}

	ndec=${new%%$newf}

	nnewf=${#newf}

	[ $nnewf -lt $((nfloat1 + nfloat2)) ] &&
		newf="$(__mkstr $((nfloat1 + nfloat2 - nnewf)) 0)$newf"

	[ ${ndec:=0} = - ] && ndec=-0
	echo ${ndec}.$newf

	unset float1 dec1 float2 dec2 nfloat1 nfloat2 maxf n1 n2 new anew newf ndec nnewf
}
