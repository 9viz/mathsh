#!/bin/sh
# Because I don't hate myself enough.  Licensed under BSD 2 Clause
# License.

#  Numbers are represented as xxxx.yyyyyy
# If you have more than one dot in the string, you're fucked.

# Return N question marks.
__nqnmarks(){
	x=
	n=0
	while [ $n -lt $1 ]; do
		x="$x?"
		: $((n+=1))
	done
	echo "$x"
	unset x n
}

# Return 10eN.
__tenpower(){
	case $1 in
	0) echo 1 ;;
	1) echo 10 ;;
	2) echo 100 ;;
	3) echo 1000 ;;
	4) echo 10000 ;;
	5) echo 100000 ;;
	*)
		x=100000
		n=5
		while [ $n -lt $1 ]; do
			x="${x}0"
			: $((n+=1))
		done
		echo "$x"
		unset x n
	esac
}

# Add $1 and $2.  Negative numbers are not valid.
add(){
	float1="${1#*.}"
	dec1="${1%%."${float1}"}"
	float2="${2#*.}"
	dec2="${2%%."${float2}"}"
	nfloat1=${#float1}
	nfloat2=${#float2}

	: $((maxf = nfloat1 >= nfloat2 ? nfloat1 : nfloat2))

	: $((new = ${dec1}${float1} * $(__tenpower $((maxf - nfloat1)))
		 + ${dec2}${float2} * $(__tenpower $((maxf - nfloat2)))))

	newf=${new#$(__nqnmarks $((${#new} - maxf)))}

	echo ${new%%$newf}.$newf

	unset dec1 float1 dec2 float2 nfloat1 nfloat2 maxf new newf
}

# Subtract $2 from $1.  Negative numbers are not valid.
sub(){
	float1="${1#*.}"
	dec1="${1%%."${float1}"}"
	float2="${2#*.}"
	dec2="${2%%."${float2}"}"
	nfloat1=${#float1}
	nfloat2=${#float2}

	: $((maxf = nfloat1 >= nfloat2 ? nfloat1 : nfloat2))

	: $((new = ${dec1}${float1} * $(__tenpower $((maxf - nfloat1)))
		 - ${dec2}${float2} * $(__tenpower $((maxf - nfloat2)))))

	: $((anew = new < 0 ? -new : new))

	newf=${anew#$(__nqnmarks $((${#anew} - maxf)))}

	echo ${new%%$newf}.$newf

	unset float1 dec1 float2 dec2 nfloat1 nfloat2 maxf new anew newf
}
